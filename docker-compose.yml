version: "3"
services:
  api1:
    image: 980247259100.dkr.ecr.eu-central-1.amazonaws.com/lab3-pad:latest
    container_name: api1
    environment:
      - APP_PORT=8080
      - REDIS_HOST=10.62.1.111:6379
      - DB_HOST=172.18.54.12
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - DB_SSL=disable
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.80
    depends_on:
      db-node:
        condition: service_started

  api2:
    image: 980247259100.dkr.ecr.eu-central-1.amazonaws.com/lab3-pad:latest
    container_name: api2
    environment:
      - APP_PORT=8081
      - REDIS_HOST=10.62.1.111:6379
      - DB_HOST=172.18.54.12
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - DB_PORT=5432
      - DB_SSL=disable
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.81
    depends_on:
      db-node:
        condition: service_started

  proxy:
    image: 980247259100.dkr.ecr.eu-central-1.amazonaws.com/lab3-pad:proxy
    container_name: proxy
    environment:
      - BACKEND_ADDRESSES=http://172.18.54.81:8081,http://172.18.54.80:8080
    ports:
      - "8885:8080"
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.85

  db-node:
    image: postgres:15.4
    container_name: node2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    volumes:
      - ./script/:/data
    restart: unless-stopped
    ports:
      - 25433:5432
    networks:
      cluster:
        ipv4_address: 172.18.54.12

networks:
  cluster:
      driver: bridge
      ipam:
        config:
          - subnet: 172.18.54.0/24
            gateway: 172.18.54.1