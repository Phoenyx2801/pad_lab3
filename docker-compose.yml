version: "3"
services:
  api1:
    image: backend:redis
    container_name: api1
    environment:
      - REDIS_HOST=10.62.1.111:6379
      - DB_CONNECT_STRING="host=172.18.54.12 user=postgres password=postgres dbname=postgres port=5432 sslmode=disable"
    ports:
      - 18080:8081
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.80

  api2:
    image: backend:redis
    container_name: api2
    environment:
      - REDIS_HOST=10.62.1.111:6379
      - DB_CONNECT_STRING="host=172.18.54.11 user=postgres password=postgres dbname=postgres port=5432 sslmode=disable"
    ports:
      - 18081:8081
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.81

  proxy:
    image: proxy:latest
    container_name: proxy
    environment:
      - BACKEND_ADDRESSES=http://172.18.54.81:18080,http://172.18.54.80:18081
    ports:
      - "8885:8080"
    restart: unless-stopped
    networks:
      cluster:
        ipv4_address: 172.18.54.85

  db-node1:
    image: postgres:15.4
    container_name: node1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    volumes:
      - ./script/:/data
    restart: unless-stopped
    # command: /bin/sh -c "/data/node_init.sh"
    ports:
      - 15432:5432
    networks:
      cluster:
        ipv4_address: 172.18.54.11

  db-node2:
    image: postgres:15.4
    container_name: node2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=postgres
    volumes:
      - ./script/:/data
    restart: unless-stopped
    # command: /bin/sh -c "/data/node_init.sh"
    ports:
      - 25433:5432
    networks:
      cluster:
        ipv4_address: 172.18.54.12


networks:
  cluster:
      driver: bridge
      ipam:
        config:
          - subnet: 172.18.54.0/24
            gateway: 172.18.54.1